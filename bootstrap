#!/bin/bash

set -euo pipefail

GO_VERSION=1.23.1
KUBECTL_VERSION=v1.16.0

if [ "$(uname)" == "Linux" ]; then
    apt-get update && \
        apt-get install -y software-properties-common \
            ca-certificates \
            curl \
            apt-transport-https \
            lsb-release \
            gnupg \
            build-essential \
            jq \
            language-pack-en \
            tmux \
            fzf \
            git \
            ripgrep \
            ninja-build \
            gettext \
            cmake \
            unzip \
            zsh

    if [ ! -f "/etc/apt/keyrings/microsoft.gpg" ]; then
        curl -sLS https://packages.microsoft.com/keys/microsoft.asc | 
            gpg --dearmor | 
            tee /etc/apt/keyrings/microsoft.gpg > /dev/null
	    chmod go+r /etc/apt/keyrings/microsoft.gpg
    fi

    if [ ! -f "/etc/apt/sources.list.d/azure-cli.list" ]; then
            AZ_DIST=$(lsb_release -cs)
            echo "Types: deb
URIs: https://packages.microsoft.com/repos/azure-cli/
Suites: ${AZ_DIST}
Components: main
Architectures: $(dpkg --print-architecture)
Signed-by: /etc/apt/keyrings/microsoft.gpg" | tee /etc/apt/sources.list.d/azure-cli.sources
    fi

    if [ ! -f "/etc/apt/keyrings/kubernetes-apt-keyring.gpg" ]; then
        curl -sLS https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | 
            gpg --dearmor | 
            tee /etc/apt/keyrings/kubernetes-apt-keyring.gpg > /dev/null
	    chmod go+r /etc/apt/keyrings/kubernetes-apt-keyring.gpg
    fi

    if [ ! -f "/etc/apt/sources.list.d/kubernetes.list" ]; then
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list
        chmod go+r /etc/apt/sources.list.d/kubernetes.list
    fi

    apt-get update && \
        apt-get install -y \
            kubectl \
            azure-cli
fi

if [ "$(uname)" == "Darwin" ]; then
    /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    brew bundle install
fi

# Installed via Brewfile on Mac
if [ "$(uname)" == "Linux" ]; then
    mkdir -p $HOME/bin
    mkdir -p $HOME/.kube
    mkdir -p $HOME/Code
    mkdir -p $HOME/.config

    # install go
    if [ ! -d "/usr/local/go" ]; then
        curl -L https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz | tar -C /usr/local -xz
    fi

#    if [ ! -d "$HOME/Code/github.com/jonmosco" ]; then
#        mkdir -p $HOME/Code/github.com/jonmosco
#        git clone https://github.com/jonmosco/kube-ps1.git $HOME/Code/github.com/jonmosco/kube-ps1
#    fi

#    if [ ! -d "$HOME/Code/github.com/ahmetb" ]; then
#        mkdir -p $HOME/Code/github.com/ahmetb
#        git clone https://github.com/ahmetb/kubectx.git $HOME/Code/github.com/ahmetb/kubectx
#    fi
fi

# neovim python extensions
#pip install pynvim --upgrade --disable-pip-version-check --no-cache-dir && pip3 install pynvim --upgrade --disable-pip-version-check --no-cache-dir

# pygmentize
# pip3 install --upgrade --disable-pip-version-check --no-cache-dir pygmentize

# Oh my zsh
if [ ! -d "$HOME/.oh-my-zsh" ]; then
    curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | bash
    # usermod -s /bin/zsh "${USER}"
    rm "$HOME/.zshrc"
fi

# base16 shell themes
#if [ ! -d "$HOME/.config/base16-shell" ]; then
#    git clone https://github.com/base16-project/base16-shell.git "$HOME/.config/base16-shell" #&& \
#        # ln -s "$HOME/.config/base16-shell/scripts/base16_tomorrow-night.sh" "$HOME/.base16_theme"
#fi

# fzf
#if [ ! -d "$HOME/.fzf" ]; then
#    git clone --depth 1 https://github.com/junegunn/fzf.git "$HOME/.fzf" && "$HOME/.fzf/install" --no-update-rc
#fi

zsh -c make all

# vim: ts=4 sw=4 et
